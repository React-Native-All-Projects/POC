# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: 'macOS-10.14'

steps:
- task: NodeTool@0
  displayName: 'Install Node'
  inputs:
    versionSpec: '12.16.1'

- script: npm install
  workingDirectory: poc
  displayName: 'Install node dependencies'

- task: Gradle@2
  inputs:
    workingDirectory: 'poc/android'
    gradleWrapperFile: 'poc/android/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'betadebug'

# - task: AndroidSigning@3
#   inputs:
#     apkFiles: '**/*.apk'
#     apksign: true
#     apksignerKeystoreFile: 'poc.keystore'
#     apksignerKeystorePassword: 'pocpoc'
#     apksignerKeystoreAlias: 'poc'
#     apksignerKeyPassword: 'pocpoc'
#     apksignerArguments: --out $(Build.SourcesDirectory)/app/build/outputs/apk/release/my-crazy-app.release.apk
#     zipalign: true


# - task: CopyFiles@2
#   inputs:
#     SourceFolder: $(Build.SourcesDirectory)
#     contents: 'APK/APPAPP.release.apk'
#     targetFolder: '$(build.artifactStagingDirectory)'
#     overWrite: true

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)/app/build/outputs/apk/release/'
#     artifactName: 'apks'
#     publishLocation: 'container'




# - task: AndroidSigning@3
#   displayName: APK
#   inputs:
#       apkFiles: 'android/app/build/outputs/apk/release/div.apk'
#       apksignerKeystoreFile: 'poc.keystore'
#       apksignerKeystorePassword: 'pocpoc'
#       apksignerKeystoreAlias: 'poc'
#       apksignerKeyPassword: 'pocpoc'
#       zipalign: true







# - task: Gradle@2
#   inputs:
#     workingDirectory: 'poc/android'
#     gradleWrapperFile: 'poc/android/gradlew'
#     gradleOptions: '-Xmx3072m'
#     publishJUnitResults: false
#     testResultsFiles: '**/TEST-*.xml'
#     tasks: 'DevRelease'

# - task: AndroidSigning@2
#   inputs:
#     apkFiles: 'poc/android/app/build/outputs/apk/release/app-dev-release.apk'
#     jarsign: true
#     jarsignerKeystoreFile: 'poc.keystore'
#     jarsignerKeystorePassword: 'pocpoc'
#     jarsignerKeystoreAlias: 'poc'
#     jarsignerKeyPassword: 'pocpoc'
#     zipalign: true


# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: poc.releaseApp.apk
#     artifactName: drop
#     publishLocation: 'container'











# variables:
#   uiSource: "src"
#   uiBuild: "$(uiSource)/build"

# pool:
#   vmthumbnail: ../"ubuntu-latest"
# steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: "10.x"
#   displayName: "Install Node.js"

# - script: |
#     pushd $(uiSource)
#     npm install
#     npm run build
#     popd
#   displayName: "Build UI"

# - task: ArchiveFiles@2
#   displayName: Archive
#   inputs:
#     rootFolderOrFile: "$(Build)"
#     includeRootFolder: false
#     archiveType: "zip"
#     archiveFile: "$(Build.ArtifactStagingDirectory)/ui-$(Build.BuildId).zip"
#     replaceExistingArchive: true
    
# - task: PublishBuildArtifacts@1
#   displayName: Publish Artifacts
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'








# - task: Gradle@2
#   displayName: 'Gradle'
#   inputs:
#     gradleWrapperFile: 'android/gradlew'
#     workingDirectory: 'android/'
#     tasks: 'betarelease'
#     publishJUnitResults: false
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     gradleOptions: '-Xmx3072m'
#     sonarQubeRunAnalysis: false
    
# - task: AndroidSigning@3
#   displayName: 'AndroidSigning'
#   inputs:
#       apkFiles: 'android/app/build/outputs/apk/release/*.apk'
#       apksignerKeystoreFile: './poc/android/app/poc.keystore'
#       apksignerKeystorePassword: 'pocpoc'
#       apksignerKeystoreAlias: 'poc'
#       apksignerKeyPassword: 'pocpoc'
#       zipalign: true

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish APK to artifacts'
#   inputs:
#       PathtoPublish: 'android/app/build/outputs/apk/release'
#       ArtifactName: 'android'
#       publishLocation: 'Container'

